package com.bridgelabz.datastructure;

public class MyDequeue<T> implements IDequeue<T>{
	private static final int DEFAULT_CAPACITY = 10;
	private T[] dequeue;
	private int size = 0;
	private int capacity;
	int rear;
	int front;
	
		//****************************************************
	
		public MyDequeue() {
			capacity = DEFAULT_CAPACITY;
			dequeue = (T[]) new Object[DEFAULT_CAPACITY];
		}
		
		//*****************************************************
		
		public MyDequeue(int capacity) {
			this.capacity = capacity;
			dequeue = (T[]) new Object[capacity];

		}
			
		//***************************************************
	
	
		@Override
		public int size() {
			return size;
		}
		
		//***************************************************

		@Override
		public boolean isEmpty() {
			return size == 0;
		}
		
		//************************************************

		@Override
			public void addFront(T data) {
		
		}

		@Override
		public void addRear(T data) {
		// TODO Auto-generated method stub
		
		}

		@Override
		public T removeFront() {
		// TODO Auto-generated method stub
			return null;
		}

		@Override
		public T removeRear() {
		// TODO Auto-generated method stub
			return null;
		}

	
}
